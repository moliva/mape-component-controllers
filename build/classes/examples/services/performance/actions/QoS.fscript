
action add-worker(solver, vn) {

	worker = gcm-new("examples.services.performance.components.Slave", $vn);
	set-name($worker, "Worker");

	solverManager = $solver/child::SolverManager;

	stop($solver);
	add($solver, $worker);
	bind($solverManager/interface::worker-multicast, $worker/interface::worker);
	wAttribute = $solverManager/attribute::numberOfWorkers;
	set-value($wAttribute, value($wAttribute) + 1);
	start($solver);
	
	return true();
}

action add-worker-on-vn0(solver) {
	gcma = deploy-gcma("src/Examples/examples/md5cracker/GCMA.xml");
	return add-worker($solver, $gcma/gcmvn::VN0);
}

action add-worker-on-vn1(solver) {
	gcma = deploy-gcma("src/Examples/examples/md5cracker/GCMApp.xml");
	return add-worker($solver, $gcma/gcmvn::VN1);
}

action add-worker-on-vn2(solver) {
	gcma = deploy-gcma("src/Examples/examples/md5cracker/GCMApp.xml");
	return add-worker($solver, $gcma/gcmvn::VN2);
}

action add-worker-on-vn3(solver) {
	gcma = deploy-gcma("src/Examples/examples/md5cracker/GCMApp.xml");
	return add-worker($solver, $gcma/gcmvn::VN3);
}

action add-worker-on-vn4(solver) {
	gcma = deploy-gcma("src/Examples/examples/GCMALocal.xml");
	return add-worker($solver, $gcma/gcmvn::VN0);
}

--
-- Try to improve solvers, return true if success, fail otherwise
--
action improve-solvers(cracker, max) {

	for solver : $cracker/child::*[name(.) == "Solver"] {

		solverManager = $solver/child::SolverManager;
		numOfWorkers = value($solverManager/attribute::numberOfWorkers);
		
		if ( $numOfWorkers < $max ) {
	
			id = value($solverManager/attribute::id);

			if ($id == 1) {
				return add-worker-on-vn4($solver);
			}
			if ($id == 2) {
				return add-worker-on-vn4($solver);
			}
			if ($id == 3) {
				return add-worker-on-vn4($solver);
			}
		
			fail();
		}
	}

	return false();
}


action remove-worker(cracker) {

	-- First find the solver with the maximum id
	solver = false();
	id = -1;
	for comp : $cracker/child::*[name(.) == "Solver"] {
		solverId = value($comp/child::"SolverManager"/attribute::id);
		if ( $solverId > $id ) {
			id = $solverId;
			solver = $comp;
		}
	}

	-- No solver was found, could do nothing...
	--
	if ($solver == false()) {
		return false();
	}

	-- Check if this solver has more than 1 worker otherwise,
	-- better remove the whole solver (return false)
	--
	solverManager = $solver/child::"SolverManager";
	numOfWorkers = value($solverManager/attribute::numberOfWorkers);
	if ($numOfWorkers <= 1) {
		return false(); 
	}

	-- Grab one worker (i don't know a better way now)...
	--
	worker = false();
	for w : $solver/child::"Worker" {
		worker = $w;
	}

	-- unbind and remove
	stop($solver);
	unbind-unit($solverManager/interface::worker-multicast, $worker/interface::worker);	
	remove($solver, $worker);
	set-value($solverManager/attribute::numberOfWorkers, $numOfWorkers - 1);
	start($solver);

	--kill($worker);
	return true();
}
